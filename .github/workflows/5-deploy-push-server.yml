# .github/workflows/5-deploy-push-server.yml
name: 5. Deploy Push Server
on:
  push:
    paths:
      - 'push_server/**'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Check SSH Connection with Retry
        env:
          SSH_PRIVATE_KEY: ${{ secrets.PUSH_SERVER_SSH_KEY }}
          SSH_HOST: ${{ secrets.PUSH_SERVER_HOST }}
          SSH_USER: ${{ secrets.PUSH_SERVER_USER }}
        run: |
          set -e
          echo "--- Setting up SSH key ---"
          mkdir -p ~/.ssh/
          echo "${SSH_PRIVATE_KEY}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          
          MAX_RETRIES=5
          SUCCESS=false
          
          for i in $(seq 1 $MAX_RETRIES); do
            echo "--- SSH Connection Attempt: $i / $MAX_RETRIES ---"
            if ssh -o StrictHostKeyChecking=no -o ConnectTimeout=15 "${SSH_USER}@${SSH_HOST}" "echo Connection successful"; then
              SUCCESS=true
              echo "✅ SSH Connection successful."
              break
            else
              echo "SSH connection failed. Retrying in 15 seconds..."
              sleep 15
            fi
          done

          if [ "$SUCCESS" = false ]; then
            echo "Failed to connect to SSH server after $MAX_RETRIES attempts."
            exit 1
          fi

      - name: Deploy to Azure Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PUSH_SERVER_HOST }}
          username: ${{ secrets.PUSH_SERVER_USER }}
          key: ${{ secrets.PUSH_SERVER_SSH_KEY }}
          envs: TELEGRAM_BOT_TOKEN,PUSH_SERVER_WEBHOOK_SECRET
          script: |
            set -e

            APP_DIR="/home/webhook"
            REPO_URL="https://github.com/${{ github.repository }}.git"
            BRANCH_NAME="${{ github.ref_name }}"

            echo "--- 正在部署机器人到 $APP_DIR ---"

            sudo mkdir -p "$APP_DIR"
            sudo chown ${{ secrets.PUSH_SERVER_USER }}:${{ secrets.PUSH_SERVER_USER }} "$APP_DIR"
            cd "$APP_DIR"

            if [ ! -d ".git" ]; then
              echo "Git 仓库不存在，正在进行初始化..."
              git init
              git remote add origin "$REPO_URL"
              git fetch origin
              git checkout "$BRANCH_NAME"
            else
              echo "Git 仓库已存在，正在拉取最新的代码..."
              git remote set-url origin "$REPO_URL"
              git fetch origin
              git checkout "$BRANCH_NAME"
              git reset --hard "origin/$BRANCH_NAME"
            fi
            
            echo "正在设置 Python 虚拟环境..."
            if [ ! -d "venv" ]; then
              python3 -m venv venv
            fi
            
            source venv/bin/activate
            echo "正在安装/更新依赖..."
            pip install -r push_server/requirements.txt
            
            echo "正在创建 systemd 覆盖配置文件..."
            # 使用 Heredoc 将多行配置写入文件
            sudo mkdir -p /etc/systemd/system/webhook.service.d
            sudo bash -c "cat > /etc/systemd/system/webhook.service.d/override.conf" << EOF
            [Service]
            Environment="TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}"
            Environment="WEBHOOK_SECRET=${PUSH_SERVER_WEBHOOK_SECRET}"
            EOF
            
            echo "正在重载 systemd 并重启服务..."
            sudo systemctl daemon-reload
            sudo systemctl restart webhook
            
            echo "🎉 部署成功！机器人已是最新版本！"
