name: 1. Setup Kernel Repositories
on:
  workflow_dispatch:
    inputs:
      commit_message:
        description: '请输入本次同步操作的 Commit 信息'
        required: true
        default: 'ci: Sync central build trigger workflow'
jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - { uses: actions/checkout@v4 }
      - { run: sudo apt-get install -y jq }
      - name: Configure each kernel repository
        env:
          ADMIN_TOKEN: ${{ secrets.ADMIN_TOKEN }}
          COMMIT_MESSAGE: ${{ github.event.inputs.commit_message }}
        run: |
          for project_key in $(jq -r 'keys[]' configs/projects.json); do
            PROJECT_REPO=$(jq -r --arg PKEY "$project_key" '.[$PKEY].repo' configs/projects.json)
            echo "--- Processing: $PROJECT_REPO ---"
            git clone "https://x-access-token:$ADMIN_TOKEN@github.com/$PROJECT_REPO.git" "temp_kernel"
            cd temp_kernel
            echo "Cleaning up old CI files..."
            rm -rf .github/workflows build*.sh update-kernelsu.yml
            echo "Creating new trigger workflow..."
            mkdir -p .github/workflows
            cat > .github/workflows/trigger-central-build.yml <<EOF
# 由中央 CI 系统自动生成和管理
name: Trigger Central Build
on:
  push:
    branches: [ sukisuultra, mksu, ksu ]
jobs:
  trigger:
    runs-on: ubuntu-latest
    steps:
      - name: Trigger build in kernel-ci repository
        uses: peter-evans/repository-dispatch@v3
        with:
          repository: ${{ github.repository_owner }}/kernel-ci
          token: \${{ secrets.CI_TOKEN }}
          event-type: build-kernel
          client-payload: >-
            {
              "project": "${project_key}",
              "branch": "\${{ github.ref_name }}"
            }
EOF
            git config --global user.name "GitHub Actions Setup" && git config --global user.email "actions@github.com"
            if [[ -n $(git status --porcelain) ]]; then
              echo "Found changes, committing..."
              git add .
              git commit -m "$COMMIT_MESSAGE"
              git push
            else
              echo "No changes needed."
            fi
            cd .. && rm -rf temp_kernel
          done
 
