# .github/workflows/3-upstream-watcher.yml
name: 3. Watch Upstream KernelSU (Matrix Powered)
on:
  schedule:
    - cron: '0 */6 * * *' # 每6小时检查一次
  workflow_dispatch:

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout Central Repo
        uses: actions/checkout@v4
      - name: Install jq
        run: sudo apt-get install -y jq
      - name: Generate Update Matrix
        id: set-matrix
        run: |
          JSON_MATRIX=$(jq -c '[
            . as $all_projects |
            ["ksu", "mksu", "sukisuultra"] |
            map({
              "ksu_type": .,
              "projects": [
                $all_projects |
                keys[] |
                select(
                  $all_projects[.].supported_ksu and
                  ($all_projects[.].supported_ksu | index(.) != null)
                ) |
                { "key": ., "repo": $all_projects[.].repo }
              ]
            }) | .[] | select(.projects | length > 0)
          ]' configs/projects.json)
          echo "matrix=$JSON_MATRIX" >> $GITHUB_OUTPUT

  check_and_update:
    needs: generate-matrix
    if: ${{ needs.generate-matrix.outputs.matrix != '[]' }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        config: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    
    steps:
      - name: Checkout Central Repo
        uses: actions/checkout@v4
        with:
          token: "${{ secrets.ADMIN_TOKEN }}"

      - name: Check for new version
        id: check_version
        env:
          KSU_TYPE: ${{ matrix.config.ksu_type }}
        run: |
          declare -A KSU_UPSTREAMS
          KSU_UPSTREAMS["ksu"]="https://github.com/tiann/KernelSU.git"
          KSU_UPSTREAMS["mksu"]="https://github.com/5ec1cff/KernelSU.git"
          KSU_UPSTREAMS["sukisuultra"]="https://github.com/SukiSU-Ultra/SukiSU-Ultra.git"
          
          declare -A KSU_BRANCHES
          KSU_BRANCHES["ksu"]="main"
          KSU_BRANCHES["mksu"]="main"
          KSU_BRANCHES["sukisuultra"]="susfs-main"
          
          UPSTREAM_REPO_URL="${KSU_UPSTREAMS[$KSU_TYPE]}"
          UPSTREAM_BRANCH="${KSU_BRANCHES[$KSU_TYPE]}"

          echo "Checking upstream for $KSU_TYPE..."
          LATEST_COMMIT=$(git ls-remote "$UPSTREAM_REPO_URL" "$UPSTREAM_BRANCH" | cut -f1)
          LAST_KNOWN_COMMIT=$(jq -r --arg KTYPE "$KSU_TYPE" '.[$KTYPE]' ${{ github.workspace }}/configs/upstream_commits.json)

          if [ "$LATEST_COMMIT" != "$LAST_KNOWN_COMMIT" ]; then
            echo "New version found!"
            echo "should_update=true" >> $GITHUB_OUTPUT
            echo "latest_commit=$LATEST_COMMIT" >> $GITHUB_OUTPUT
            echo "latest_commit_short=${LATEST_COMMIT:0:7}" >> $GITHUB_OUTPUT
          else
            echo "No new updates."
            echo "should_update=false" >> $GITHUB_OUTPUT
          fi

      - name: Call Reusable Workflow to Update All Projects
        if: steps.check_version.outputs.should_update == 'true'
        uses: ./.github/workflows/reusable-update-kernel-source.yml
        with:
          projects_json: ${{ toJson(matrix.config.projects) }}
          ksu_type: ${{ matrix.config.ksu_type }}
          latest_commit_short: ${{ steps.check_version.outputs.latest_commit_short }}
          commit_message: "ci: auto-update ${{ matrix.config.ksu_type }} to ${{ steps.check_version.outputs.latest_commit_short }}"
        secrets:
          ADMIN_TOKEN: ${{ secrets.ADMIN_TOKEN }}

      - name: Commit and Push Upstream Commit File
        if: steps.check_version.outputs.should_update == 'true'
        run: |
          jq --arg KTYPE "${{ matrix.config.ksu_type }}" --arg LCOMMIT "${{ steps.check_version.outputs.latest_commit }}" '.[$KTYPE] = $LCOMMIT' ${{ github.workspace }}/configs/upstream_commits.json > tmp.json && mv tmp.json ${{ github.workspace }}/configs/upstream_commits.json
          git config --global user.name "GitHub Actions Watcher"
          git config --global user.email "actions@github.com"
          git add configs/upstream_commits.json
          if [[ -n $(git status --porcelain) ]]; then
            git commit -m "ci: update upstream commit record for ${{ matrix.config.ksu_type }}"
            git push
          fi
